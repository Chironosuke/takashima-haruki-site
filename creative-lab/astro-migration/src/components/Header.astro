---
// src/components/Header.astro
export interface Props {
  currentPath?: string;
}

const { currentPath = "/" } = Astro.props;

const navItems = [
  { href: "/", label: "Home" },
  { href: "/about/", label: "About" },
  { href: "/web-development/", label: "Web Development" },
  { href: "/education/", label: "Education" },
  { href: "/blog/", label: "Blog" },
  { href: "/contact/", label: "Contact" },
];
---

<header
  class="fixed top-0 left-0 right-0 z-50 bg-slate-900/90 backdrop-blur-lg border-b border-slate-800"
>
  <nav class="container mx-auto px-6 py-4">
    <div class="flex items-center justify-between">
      <!-- ロゴ -->
      <a
        href="/"
        class="text-xl font-bold bg-gradient-to-r from-purple-400 via-pink-500 to-emerald-400 bg-clip-text text-transparent"
      >
        髙島春樹
      </a>

      <!-- デスクトップナビゲーション -->
      <ul class="hidden md:flex space-x-8">
        {
          navItems.map((item) => (
            <li>
              <a
                href={item.href}
                class={`hover:text-purple-400 transition-colors duration-200 ${
                  currentPath === item.href
                    ? "text-purple-400"
                    : "text-gray-300"
                }`}
              >
                {item.label}
              </a>
            </li>
          ))
        }
      </ul>

      <!-- Main Siteリンク -->
      <a
        href="/"
        class="hidden md:block text-gray-300 hover:text-purple-400 transition-colors duration-200"
      >
        ← Main Site
      </a>

      <!-- モバイルメニューボタン -->
      <button
        id="mobileMenuBtn"
        class="md:hidden text-white focus:outline-none focus:ring-2 focus:ring-purple-400 p-2"
        aria-label="メニューを開く"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- モバイルナビゲーション -->
    <div
      id="mobileMenu"
      class="md:hidden hidden mt-4 py-4 border-t border-slate-800"
    >
      <ul class="space-y-3">
        {
          navItems.map((item) => (
            <li>
              <a
                href={item.href}
                class={`block py-2 hover:text-purple-400 transition-colors duration-200 ${
                  currentPath === item.href
                    ? "text-purple-400"
                    : "text-gray-300"
                }`}
              >
                {item.label}
              </a>
            </li>
          ))
        }
        <li class="pt-3 border-t border-slate-800">
          <a
            href="/"
            class="block py-2 text-gray-300 hover:text-purple-400 transition-colors duration-200"
          >
            ← Main Site
          </a>
        </li>
      </ul>
    </div>
  </nav>
</header>

<script>
  // モバイルメニューの制御
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuBtn = document.getElementById("mobileMenuBtn");
    const mobileMenu = document.getElementById("mobileMenu");

    if (mobileMenuBtn && mobileMenu) {
      mobileMenuBtn.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");

        // アイコンの切り替え
        const icon = mobileMenuBtn.querySelector("svg path");
        if (icon) {
          const isOpen = !mobileMenu.classList.contains("hidden");
          icon.setAttribute(
            "d",
            isOpen ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"
          );
        }
      });
    }
  });
</script>
